name: Java CD with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       java: [ '17' ]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up JDK ${{ matrix.java }}
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: ${{ matrix.java }}
  #         distribution: 'temurin'
  #         cache: maven

  #     - name: Set permissions for Maven Wrapper
  #       run: chmod +x ./mvnw

  #     - name: Build with Maven Wrapper
  #       run: ./mvnw -B compile

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   strategy:
  #     matrix:
  #       java: [ '17' ]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up JDK ${{ matrix.java }}
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: ${{ matrix.java }}
  #         distribution: 'temurin'
  #         cache: maven

  #     - name: Set permissions for Maven Wrapper
  #       run: chmod +x ./mvnw

  #     - name: Run Tests
  #       run: ./mvnw test

  package:
    runs-on: ubuntu-latest
    # needs: test
    strategy:
      matrix:
        java: ['17']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven

      - name: Set permissions for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Build with Maven Wrapper
        run: ./mvnw -B package

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker image with Docker Compose
        uses: adrielcodeco/docker-compose-run-action@v1
        with:
          args: |
            build
            push

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: package
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Deploy to EC2
  #       uses: appleboy/ssh-action@v0.1.8
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ${{ secrets.EC2_USER }}
  #         key: ${{ secrets.EC2_SSH_KEY }}
  #         port: 22
  #         script: |
  #           # Ensure Docker is installed
  #           if ! command -v docker &> /dev/null; then
  #             echo "Docker not found, installing..."
  #             sudo yum update -y
  #             sudo yum install -y docker
  #             sudo systemctl start docker
  #             sudo systemctl enable docker
  #             sudo usermod -aG docker aishwar
  #           fi

  #           # Ensure Docker Compose is installed
  #           if ! command -v docker-compose &> /dev/null; then
  #             echo "Docker Compose not found, installing..."
  #             sudo curl -L "https://github.com/docker/compose/releases/download/v2.19.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  #             sudo chmod +x /usr/local/bin/docker-compose
  #           fi

  #           # Pull Docker image and run container
  #           echo "Pulling Docker image..."
  #           sudo docker-compose pull

  #           echo "Stopping and removing old containers..."
  #           sudo docker-compose down || true

  #           echo "Running new containers..."
  #           sudo docker-compose up -d
  #         timeout: 30s
  #         command_timeout: 10m
  #         debug: false
